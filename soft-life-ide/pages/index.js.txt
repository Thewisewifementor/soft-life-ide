import React, { useState } from 'react';
import { ChevronRight, Heart, Star, CheckCircle, Calendar, Users, Sparkles, Crown, Coffee, Target } from 'lucide-react';

export default function SoftLifeIDE() {
  const [currentDay, setCurrentDay] = useState(1);
  const [completedDays, setCompletedDays] = useState(new Set());
  const [currentWeek, setCurrentWeek] = useState(1);

  const weeks = [
    {
      id: 1,
      title: "Foundation",
      subtitle: "Creating Your Soft Life Base",
      icon: <Heart className="w-6 h-6" />,
      color: "from-pink-400 to-rose-400",
      focus: "From Chaos to Calm"
    },
    {
      id: 2,
      title: "Systems", 
      subtitle: "Building Soft Life Boundaries",
      icon: <Star className="w-6 h-6" />,
      color: "from-purple-400 to-pink-400",
      focus: "Holy Boundaries"
    },
    {
      id: 3,
      title: "Strategy",
      subtitle: "Next-Level Life Planning", 
      icon: <Target className="w-6 h-6" />,
      color: "from-blue-400 to-purple-400",
      focus: "Strategic Softness"
    },
    {
      id: 4,
      title: "Integration",
      subtitle: "Sustainable Momentum",
      icon: <Crown className="w-6 h-6" />,
      color: "from-emerald-400 to-blue-400",
      focus: "Living in Flow"
    }
  ];

  const dailyActivities = {
    1: { title: "Soft Life Audit", activity: "What needs to go?", type: "reflection" },
    2: { title: "Energy Assessment", activity: "Identify your drains", type: "interactive" },
    3: { title: "Values Deep Dive", activity: "What matters most?", type: "quiz" },
    4: { title: "Vision Board Digital", activity: "Create your soft life vision", type: "creative" },
    5: { title: "Environment Design", activity: "Transform your space", type: "challenge" },
    6: { title: "Morning Ritual", activity: "Design your peaceful start", type: "ritual" },
    7: { title: "Evening Wind-Down", activity: "Create your soft close", type: "ritual" }
  };

  const markComplete = (day) => {
    const newCompleted = new Set(completedDays);
    if (newCompleted.has(day)) {
      newCompleted.delete(day);
    } else {
      newCompleted.add(day);
    }
    setCompletedDays(newCompleted);
  };

  const getProgressPercent = () => {
    return Math.round((completedDays.size / 30) * 100);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-rose-50 via-pink-50 to-purple-50">
      <div className="bg-white/80 backdrop-blur-sm border-b border-pink-100 sticky top-0 z-50">
        <div className="max-w-4xl mx-auto px-6 py-4">
          <div className="flex items-center justify-between">
            <div>
              <h1 className="text-2xl font-bold bg-gradient-to-r from-pink-600 to-purple-600 bg-clip-text text-transparent">
                Soft Life + Next-Level Life
              </h1>
              <p className="text-gray-600 text-sm">30-day transformation journey</p>
            </div>
            <div className="flex items-center gap-4">
              <div className="text-right">
                <p className="text-sm text-gray-500">Progress</p>
                <p className="font-bold text-purple-600">{getProgressPercent()}%</p>
              </div>
              <div className="w-12 h-12 bg-gradient-to-r from-pink-400 to-purple-400 rounded-full flex items-center justify-center">
                <Sparkles className="w-6 h-6 text-white" />
              </div>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-4xl mx-auto px-6 py-8">
        <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mb-8">
          {weeks.map((week) => (
            <div
              key={week.id}
              onClick={() => setCurrentWeek(week.id)}
              className={`p-4 rounded-xl cursor-pointer transition-all duration-300 ${
                currentWeek === week.id
                  ? `bg-gradient-to-r ${week.color} text-white shadow-lg scale-105`
                  : 'bg-white/60 hover:bg-white/80'
              }`}
            >
              <div className="flex items-center gap-3 mb-2">
                {week.icon}
                <h3 className="font-bold">Week {week.id}</h3>
              </div>
              <p className={`text-sm ${currentWeek === week.id ? 'text-white/90' : 'text-gray-600'}`}>
                {week.title}
              </p>
              <p className={`text-xs ${currentWeek === week.id ? 'text-white/80' : 'text-gray-500'}`}>
                {week.subtitle}
              </p>
            </div>
          ))}
        </div>

        <div className={`p-6 rounded-xl bg-gradient-to-r ${weeks[currentWeek-1].color} text-white mb-8`}>
          <div className="flex items-center gap-3 mb-3">
            {weeks[currentWeek-1].icon}
            <h2 className="text-2xl font-bold">Week {currentWeek}: {weeks[currentWeek-1].title}</h2>
          </div>
          <p className="text-white/90 text-lg mb-2">{weeks[currentWeek-1].subtitle}</p>
          <p className="text-white/80">Focus: {weeks[currentWeek-1].focus}</p>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-8">
          {Object.entries(dailyActivities).map(([day, activity]) => {
            const dayNum = parseInt(day);
            const isCompleted = completedDays.has(dayNum);
            const isCurrentDay = dayNum === currentDay;
            
            return (
              <div
                key={day}
                className={`p-4 rounded-xl border-2 transition-all duration-300 cursor-pointer ${
                  isCompleted
                    ? 'bg-gradient-to-r from-green-400 to-emerald-400 text-white border-green-300'
                    : isCurrentDay
                    ? 'bg-white border-purple-300 shadow-lg scale-105'
                    : 'bg-white/60 border-gray-200 hover:border-purple-200 hover:shadow-md'
                }`}
                onClick={() => markComplete(dayNum)}
              >
                <div className="flex items-center justify-between mb-3">
                  <span className={`text-sm font-medium ${isCompleted ? 'text-white/90' : 'text-gray-500'}`}>
                    Day {day}
                  </span>
                  {isCompleted ? (
                    <CheckCircle className="w-5 h-5 text-white" />
                  ) : (
                    <div className="w-5 h-5 border-2 border-gray-300 rounded-full" />
                  )}
                </div>
                
                <h4 className={`font-bold mb-2 ${isCompleted ? 'text-white' : 'text-gray-800'}`}>
                  {activity.title}
                </h4>
                
                <p className={`text-sm mb-3 ${isCompleted ? 'text-white/90' : 'text-gray-600'}`}>
                  {activity.activity}
                </p>
                
                <div className="flex items-center justify-between">
                  <span className={`text-xs px-2 py-1 rounded-full ${
                    isCompleted 
                      ? 'bg-white/20 text-white' 
                      : activity.type === 'reflection' 
                      ? 'bg-pink-100 text-pink-700'
                      : activity.type === 'interactive'
                      ? 'bg-purple-100 text-purple-700'
                      : activity.type === 'quiz'
                      ? 'bg-blue-100 text-blue-700'
                      : activity.type === 'creative'
                      ? 'bg-orange-100 text-orange-700'
                      : activity.type === 'challenge'
                      ? 'bg-red-100 text-red-700'
                      : 'bg-green-100 text-green-700'
                  }`}>
                    {activity.type}
                  </span>
                  
                  {!isCompleted && (
                    <ChevronRight className="w-4 h-4 text-gray-400" />
                  )}
                </div>
              </div>
            );
          })}
        </div>

        <div className="bg-white/80 backdrop-blur-sm rounded-xl p-6 mb-8">
          <h3 className="text-xl font-bold text-gray-800 mb-4 flex items-center gap-2">
            <Calendar className="w-5 h-5" />
            Your Journey Progress
          </h3>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <div className="text-center">
              <div className="w-16 h-16 mx-auto mb-3 bg-gradient-to-r from-pink-400 to-rose-400 rounded-full flex items-center justify-center">
                <span className="text-2xl font-bold text-white">{completedDays.size}</span>
              </div>
              <p className="font-medium text-gray-800">Days Completed</p>
              <p className="text-sm text-gray-500">Out of 30 days</p>
            </div>
            
            <div className="text-center">
              <div className="w-16 h-16 mx-auto mb-3 bg-gradient-to-r from-purple-400 to-pink-400 rounded-full flex items-center justify-center">
                <span className="text-2xl font-bold text-white">{Math.ceil(currentWeek)}</span>
              </div>
              <p className="font-medium text-gray-800">Current Week</p>
              <p className="text-sm text-gray-500">{weeks[currentWeek-1].title}</p>
            </div>
            
            <div className="text-center">
              <div className="w-16 h-16 mx-auto mb-3 bg-gradient-to-r from-blue-400 to-purple-400 rounded-xl flex items-center justify-center">
                <Crown className="w-8 h-8 text-white" />
              </div>
              <p className="font-medium text-gray-800">Transformation Level</p>
              <p className="text-sm text-gray-500">
                {getProgressPercent() < 25 ? 'Foundation' : 
                 getProgressPercent() < 50 ? 'Building' :
                 getProgressPercent() < 75 ? 'Flowing' : 'Mastery'}
              </p>
            </div>
          </div>
          
          <div className="mt-6">
            <div className="flex justify-between items-center mb-2">
              <span className="text-sm font-medium text-gray-700">Overall Progress</span>
              <span className="text-sm font-bold text-purple-600">{getProgressPercent()}%</span>
            </div>
            <div className="w-full bg-gray-200 rounded-full h-3">
              <div 
                className="bg-gradient-to-r from-pink-400 to-purple-400 h-3 rounded-full transition-all duration-500"
                style={{ width: `${getProgressPercent()}%` }}
              ></div>
            </div>
          </div>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-gradient-to-r from-pink-400 to-rose-400 rounded-xl p-6 text-white">
            <div className="flex items-center gap-3 mb-4">
              <Users className="w-6 h-6" />
              <h3 className="text-xl font-bold">Community Support</h3>
            </div>
            <p className="text-white/90 mb-4">
              Connect with other women on the same journey. Share wins, get support, and celebrate transformations together.
            </p>
            <button className="bg-white/20 hover:bg-white/30 text-white px-4 py-2 rounded-lg transition-colors">
              Join Community →
            </button>
          </div>
          
          <div className="bg-gradient-to-r from-purple-400 to-pink-400 rounded-xl p-6 text-white">
            <div className="flex items-center gap-3 mb-4">
              <Coffee className="w-6 h-6" />
              <h3 className="text-xl font-bold">Live Coaching Calls</h3>
            </div>
            <p className="text-white/90 mb-4">
              Join weekly group coaching calls for deeper transformation, hot seat coaching, and direct guidance.
            </p>
            <button className="bg-white/20 hover:bg-white/30 text-white px-4 py-2 rounded-lg transition-colors">
              View Schedule →
            </button>
          </div>
        </div>
      </div>
    </div>
  );
}